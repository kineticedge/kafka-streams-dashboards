networks:
  default:
    external: true
    name: ksd

services:

  publisher:
    image: ksd_app:latest
    stop_grace_period: 120s
    healthcheck:
      test: /healthcheck-clients.sh || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    # provides network privileges to allow 'tc' to be used
    cap_add:
      - NET_ADMIN
    volumes:
      - ./publisher-1.0.tar:/app.tar
      - ./scripts:/scripts
      - ./jmx-exporter-config.yml:/jmx-exporter-config.yml
    environment:
      BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      CLIENT_ID_PREFIX: "producer"
      MAX_SKU: 10000
      PAUSE: 1000
      OTEL_SERVICE_NAME: PUBLISHER

  stream:
    image: ksd_app:latest
    #hostname: stream
    #container_name: stream
    stop_grace_period: 120s
    healthcheck:
      test: /healthcheck-streams.sh || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    #ports:
    #  - "7072:7072"
    deploy:
      replicas: 2
    # provides network privileges to allow 'tc' to be used
    cap_add:
      - NET_ADMIN
    volumes:
      - ./streams-1.0.tar:/app.tar
      - ./streams.properties:/streams.properties
      - ./scripts:/scripts
      - ./jmx-exporter-config.yml:/jmx-exporter-config.yml
    environment:
      BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      CLIENT_ID_PREFIX: "stream"
      OTEL_SERVICE_NAME: STREAMS

  analytics_sliding:
    image: ksd_app:latest
    hostname: analytics_sliding
    stop_grace_period: 120s
    healthcheck:
      test: /healthcheck-streams.sh || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
    cap_add:
      - NET_ADMIN
    volumes:
      - ./analytics-1.0.tar:/app.tar
      - ./analytics.properties:/analytics.properties
      - ./scripts:/scripts
      - ./stores:/tmp/kafka-streams
      - ./jmx-exporter-config.yml:/jmx-exporter-config.yml
    environment:
      BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      APPLICATION_ID: 'analytics_sliding'
      CLIENT_ID_PREFIX: "analytics_sliding"
      WINDOW_TYPE: SLIDING
      COMMIT_INTERVAL: 100
      OTEL_SERVICE_NAME: ANALYTICS_SLIDING

  analytics_tumbling:
    image: ksd_app:latest
    hostname: analytics_tumbling
    stop_grace_period: 120s
    healthcheck:
      test: /healthcheck-streams.sh || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
    cap_add:
      - NET_ADMIN
    volumes:
      - ./analytics-1.0.tar:/app.tar
      - ./analytics.properties:/analytics.properties
      - ./scripts:/scripts
      - ./stores:/tmp/kafka-streams
      - ./jmx-exporter-config.yml:/jmx-exporter-config.yml
    environment:
      BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      APPLICATION_ID: 'analytics_tumbling'
      CLIENT_ID_PREFIX: 'analytics_tumbling'
      WINDOW_TYPE: TUMBLING
      COMMIT_INTERVAL: 100
      OTEL_SERVICE_NAME: ANALYTICS_TUMBLING

  analytics_hopping:
    image: ksd_app:latest
    hostname: analytics_hopping
    stop_grace_period: 120s
    healthcheck:
      test: /healthcheck-streams.sh || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
    cap_add:
      - NET_ADMIN
    volumes:
      - ./analytics-1.0.tar:/app.tar
      - ./analytics.properties:/analytics.properties
      - ./scripts:/scripts
      - ./stores:/tmp/kafka-streams
      - ./jmx-exporter-config.yml:/jmx-exporter-config.yml
    environment:
      BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      APPLICATION_ID: 'analytics_hopping'
      CLIENT_ID_PREFIX: 'analytics_hopping'
      WINDOW_TYPE: HOPPING
      COMMIT_INTERVAL: 100
      OTEL_SERVICE_NAME: ANALYTICS_HOPPING

  analytics_session:
    image: ksd_app:latest
    hostname: analytics_session
    stop_grace_period: 120s
    healthcheck:
      test: /healthcheck-streams.sh || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
    cap_add:
      - NET_ADMIN
    volumes:
      - ./analytics-1.0.tar:/app.tar
      - ./analytics.properties:/analytics.properties
      - ./scripts:/scripts
      - ./stores:/tmp/kafka-streams
      - ./jmx-exporter-config.yml:/jmx-exporter-config.yml
    environment:
      BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      APPLICATION_ID: 'analytics_session'
      CLIENT_ID_PREFIX: 'analytics_session'
      WINDOW_TYPE: SESSION
      COMMIT_INTERVAL: 100
      OTEL_SERVICE_NAME: ANALYTICS_SESSION

  analytics_none:
    image: ksd_app:latest
    hostname: analytics_none
    stop_grace_period: 120s
    healthcheck:
      test: /healthcheck-streams.sh || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
    cap_add:
      - NET_ADMIN
    volumes:
      - ./analytics-1.0.tar:/app.tar
      - ./analytics.properties:/analytics.properties
      - ./scripts:/scripts
      - ./stores:/tmp/kafka-streams
      - ./jmx-exporter-config.yml:/jmx-exporter-config.yml
    environment:
      BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      APPLICATION_ID: 'analytics_none'
      CLIENT_ID_PREFIX: 'analytics_none'
      WINDOW_TYPE: NONE
      COMMIT_INTERVAL: 100
      OTEL_SERVICE_NAME: ANALYTICS_NONE

  nginx:
    image: nginx:latest
    container_name: ksda-nginx
    hostname: nginx
    stop_grace_period: 30s
    healthcheck:
      test: curl -s http://localhost:80 || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - '8888:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html:/etc/nginx/html

  # tracing collector agent
  otel:
    image: otel/opentelemetry-collector:latest
    container_name: ksda-otel
    hostname: otel
    #healthcheck:
    #  test: /otelcol components || exit 1
    #  interval: 5s
    #  timeout: 10s
    #  retries: 5
    #command: ["--config=/otelcol.yaml"]
    volumes:
      - ./otelcol/config.yaml:/etc/otelcol/config.yaml

