server:
    http_listen_port: 3200

distributor:
    receivers:
        otlp:
            protocols:
                http:
                grpc:

ingester:
    max_block_duration: 5m     # cut the headblock when this much time passes. this is being set for demo purposes and should probably be left alone normally

compactor:
    compaction:
        block_retention: 1h    # overall Tempo trace retention. set for demo purposes

metrics_generator:
    metrics_ingestion_time_range_slack: 30s
    processor:
        service_graphs:
            histogram_buckets: [ 1, 2 ]  # seconds
            dimensions: []
            #histogram_buckets: [0.1, 0.2, 0.4, 0.8, 1.6, 3.2, 6.4, 12.8]
            max_items: 10000
            wait: 10s
            workers: 10
        span_metrics:
            histogram_buckets: [ 1, 2 ]  # seconds
            dimensions: []
            #histogram_buckets: [0.002, 0.004, 0.008, 0.016, 0.032, 0.064, 0.128, 0.256, 0.512, 1.02, 2.05, 4.10]
    registry:
        external_labels:
            source: tempo
            cluster: docker-compose
    storage:
        path: /tmp/tempo/generator/wal
        remote_write:
            - url: http://prometheus:9090/api/v1/write
              send_exemplars: true

storage:
    trace:
        backend: local                     # backend configuration to use
        wal:
            path: /tmp/tempo/wal             # where to store the the wal locally
        local:
            path: /tmp/tempo/blocks

overrides:
    metrics_generator_processors: [service-graphs, span-metrics] # enables metrics generator

